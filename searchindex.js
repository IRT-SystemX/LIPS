Search.setIndex({"docnames": ["help", "index", "license", "lips", "lips.augmented_simulators", "lips.benchmark", "lips.config", "lips.dataset", "lips.evaluation", "lips.logger", "lips.metrics", "lips.metrics.power_grid", "lips.neurips_benchmark", "lips.physical_simulator", "modules", "quickstart"], "filenames": ["help.rst", "index.rst", "license.rst", "lips.rst", "lips.augmented_simulators.rst", "lips.benchmark.rst", "lips.config.rst", "lips.dataset.rst", "lips.evaluation.rst", "lips.logger.rst", "lips.metrics.rst", "lips.metrics.power_grid.rst", "lips.neurips_benchmark.rst", "lips.physical_simulator.rst", "modules.rst", "quickstart.rst"], "titles": ["Help", "Welcome to LIPS\u2019s documentation!", "License", "lips package", "lips.augmented_simulators package", "lips.benchmark package", "lips.config package", "lips.dataset package", "lips.evaluation package", "lips.logger package", "lips.metrics package", "lips.metrics.power_grid package", "lips.neurips_benchmark package", "lips.physical_simulator package", "lips", "Getting started"], "terms": {"thi": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 15], "file": [0, 2, 5, 6, 7, 8, 10, 11, 13], "i": [0, 4, 5, 6, 7, 8, 10, 13], "us": [0, 4, 5, 6, 7, 8, 10, 11, 13], "guid": 0, "user": [0, 1, 2, 15], "how": [0, 2, 11, 15], "document": [0, 2], "interfac": [0, 7], "If": [0, 2, 5, 6, 7, 8, 10, 13], "you": [0, 4, 5, 6, 7, 8, 10, 13], "have": [0, 2, 7, 13], "troubl": 0, "pleas": 0, "contact": 0, "milad": 0, "leyli": 0, "abadi": 0, "irt": [0, 5, 6, 7, 8, 10, 13], "systemx": [0, 5, 6, 7, 8, 10, 13], "fr": [0, 5, 6, 7, 8, 10, 13], "platform": [1, 5, 6, 7, 8, 10, 13, 15], "serv": [1, 5, 7, 13], "learn": [1, 4, 8, 13], "industri": [1, 8], "physic": [1, 5, 8, 13], "simul": [1, 4, 5, 7, 8, 11, 13], "all": [1, 2, 4, 5, 6, 7, 8, 11, 13], "requir": [1, 2, 5, 7, 8, 11], "function": [1, 4, 5, 6, 7, 8, 10, 11, 13], "ar": [1, 2, 4, 5, 7, 8, 10, 11, 13], "explain": 1, "instal": [1, 7], "augmented_simul": [1, 3, 5, 14], "packag": [1, 14, 15], "augmentedsimul": [1, 3, 5, 8, 13, 14], "submodul": [1, 3, 14], "modul": [1, 3, 14], "fullyconnecteda": [1, 3, 14], "hyperparametertun": [1, 3, 14], "leapneta": [1, 3, 14], "benchmark": [1, 3, 6, 7, 8, 10, 13, 14], "powergridbenchmark": [1, 3, 8, 14], "config": [1, 3, 5, 7, 8, 11, 14], "configmanag": [1, 3, 7, 8, 14], "dataset": [1, 3, 4, 5, 8, 13, 14], "powergriddataset": [1, 3, 13, 14], "evalu": [1, 3, 4, 5, 11, 13, 14], "powergrid_evalu": [1, 3, 14], "transport_evalu": [1, 3, 14], "util": [1, 3, 14], "logger": [1, 3, 5, 13, 14], "customlogg": [1, 3, 14], "metric": [1, 3, 5, 8, 14], "nrmse": [1, 3, 10, 14], "mape": [1, 3, 10, 14], "mape_quantil": [1, 3, 10, 14], "pearson_r": [1, 3, 10, 14], "subpackag": [1, 14], "ml_metric": [1, 3, 14], "neurips_benchmark": [1, 3, 14], "benchmark1": [1, 3, 5, 13, 14], "benchmark2": [1, 3, 14], "benchmark3": [1, 3, 14], "physical_simul": [1, 3, 14], "physicalsimul": [1, 3, 5, 7, 14], "physicssolv": [1, 3, 5, 14], "grid2opsimul": [1, 3, 7, 14], "dcapproximationa": [1, 3, 14], "licens": [1, 5, 6, 7, 8, 10, 13], "help": [1, 5], "index": [1, 7], "search": [1, 4], "page": [1, 15], "hereaft": 2, "plateform": 2, "present": [2, 5, 13, 15], "mean": [2, 7, 10], "each": [2, 5, 8, 10, 11], "individu": 2, "legal": 2, "entiti": 2, "creat": [2, 4, 5, 6, 7, 13], "creation": 2, "own": [2, 5], "combin": 2, "other": [2, 7], "ani": 2, "particular": 2, "": [2, 8, 11, 13], "which": [2, 4, 5, 7, 8, 10, 11, 13], "initi": [2, 4, 5, 7, 8, 13], "ha": [2, 7, 10], "attach": 2, "case": [2, 7, 11, 13], "includ": [2, 5, 8, 11], "portion": 2, "thereof": 2, "describ": 2, "wa": [2, 5, 6, 7, 8, 10, 13], "made": [2, 5, 11], "avail": [2, 13], "under": [2, 6], "earlier": 2, "also": [2, 7], "than": [2, 7, 11], "materi": 2, "separ": 2, "right": [2, 7], "maximum": 2, "extent": 2, "possibl": [2, 7, 11], "whether": [2, 5, 10], "time": [2, 8, 13], "convei": 2, "follow": [2, 11, 13, 15], "result": [2, 4, 5, 7, 8, 11, 13], "from": [2, 4, 6, 7, 8, 10, 13], "an": [2, 4, 5, 6, 8, 10, 11, 13], "delet": 2, "content": 2, "contain": [2, 5, 11], "without": 2, "method": [2, 4, 5, 6, 7, 8, 9, 13], "process": [2, 13], "apparatu": 2, "would": 2, "infring": 2, "make": [2, 7], "sell": 2, "offer": [2, 7, 11], "sale": 2, "import": [2, 7], "transfer": 2, "either": [2, 7], "its": [2, 5, 13, 15], "gnu": 2, "gener": [2, 3, 5, 7, 8, 11], "public": [2, 5, 6, 7, 8, 10, 13], "0": [2, 4, 5, 6, 7, 8, 10, 11, 13], "lesser": 2, "affero": 2, "later": 2, "those": 2, "prefer": 2, "exercis": 2, "For": [2, 7, 10, 13], "control": 2, "common": 2, "purpos": 2, "power": [2, 5, 6, 7, 8, 10, 11, 13], "direct": 2, "indirect": 2, "caus": 2, "manag": [2, 7], "contract": 2, "otherwis": [2, 5, 7, 10], "ownership": 2, "more": [2, 7, 10], "fifti": 2, "percent": 2, "50": 2, "outstand": 2, "share": 2, "benefici": 2, "herebi": 2, "world": [2, 7], "wide": 2, "royalti": 2, "free": [2, 7], "non": [2, 7, 10], "exclus": 2, "intellectu": 2, "properti": 2, "trademark": 2, "reproduc": [2, 7, 13], "displai": 2, "perform": [2, 4, 5, 13], "exploit": 2, "unmodifi": 2, "basi": 2, "part": [2, 5, 6, 7, 8, 10, 13], "The": [2, 5, 7, 8, 10, 11, 13, 15], "section": [2, 5, 6, 8, 10], "respect": [2, 5, 11], "becom": 2, "first": [2, 7, 13], "onli": [2, 5, 10, 11], "No": 2, "impli": 2, "notwithstand": 2, "abov": [2, 6, 7, 10], "remov": [2, 6, 7, 13], "third": 2, "parti": 2, "ii": 2, "except": [2, 4], "absenc": 2, "doe": [2, 5, 6, 11], "servic": 2, "mark": 2, "logo": 2, "mai": [2, 5, 11], "necessari": 2, "choic": 2, "see": [2, 5, 6, 7, 8, 10, 13], "permit": 2, "repres": [2, 7, 13], "believ": 2, "origin": 2, "suffici": 2, "intend": 2, "copyright": [2, 5, 6, 7, 8, 10, 13], "doctrin": 2, "deal": 2, "equival": 2, "must": 2, "inform": [2, 10, 11, 13], "recipi": 2, "govern": 2, "thei": [2, 4, 7, 13], "can": [2, 4, 5, 6, 7, 8, 10, 13], "obtain": [2, 5, 6, 7, 8, 10, 13], "copi": [2, 5, 6, 7, 8, 10, 13], "attempt": 2, "alter": 2, "restrict": 2, "reason": 2, "manner": 2, "charg": 2, "cost": 2, "sublicens": 2, "differ": [2, 5, 7, 10, 13], "provid": [2, 4, 8], "one": [2, 4, 5, 6, 7, 8, 10, 13], "addition": 2, "so": 2, "option": [2, 4, 5, 6, 7, 8, 9, 11, 13], "further": 2, "substanc": 2, "within": 2, "remedi": 2, "known": 2, "factual": 2, "inaccuraci": 2, "choos": 2, "fee": 2, "support": 2, "indemn": 2, "oblig": 2, "howev": 2, "do": [2, 8, 10], "behalf": 2, "absolut": [2, 10], "clear": 2, "alon": 2, "agre": 2, "indemnifi": 2, "everi": 2, "incur": 2, "specif": [2, 5, 7, 8, 10, 13], "jurisdict": 2, "imposs": [2, 7], "some": [2, 4, 7, 10, 13], "judici": 2, "order": [2, 13], "affect": 2, "Such": 2, "descript": [2, 13], "place": 2, "text": [2, 7], "prohibit": 2, "detail": 2, "ordinari": 2, "skill": 2, "abl": [2, 7, 13, 15], "understand": 2, "automat": 2, "fail": [2, 7, 11], "compliant": 2, "reinstat": 2, "provision": 2, "unless": 2, "until": [2, 13], "explicitli": [2, 11], "final": [2, 7, 8], "ongo": 2, "notifi": 2, "complianc": [2, 8], "prior": 2, "60": 2, "dai": 2, "after": 2, "come": [2, 4, 7, 13], "back": 2, "moreov": 2, "receiv": 2, "30": 2, "receipt": 2, "against": 2, "assert": 2, "exclud": 2, "declaratori": 2, "judgment": 2, "action": [2, 13], "counter": 2, "cross": [2, 4], "alleg": 2, "directli": 2, "indirectli": 2, "shall": 2, "In": [2, 7, 13, 15], "event": 2, "end": 2, "agreement": 2, "distributor": 2, "resel": 2, "been": [2, 7, 10], "validli": 2, "surviv": 2, "kind": [2, 7], "express": 2, "statutori": 2, "defect": 2, "merchant": 2, "fit": 2, "entir": [2, 7], "risk": 2, "qualiti": 2, "should": [2, 4, 5, 7, 8, 10, 11, 13, 15], "prove": 2, "assum": 2, "repair": 2, "correct": 2, "constitut": 2, "essenti": 2, "author": [2, 5, 6, 7, 8, 10, 13], "circumst": 2, "theori": 2, "tort": 2, "neglig": 2, "anyon": 2, "who": 2, "liabl": 2, "special": 2, "incident": 2, "consequenti": 2, "damag": 2, "charact": 2, "lost": 2, "profit": 2, "loss": [2, 4, 8, 11], "goodwil": 2, "stoppag": 2, "comput": [2, 3, 8, 10, 11, 13], "failur": 2, "malfunct": 2, "commerci": 2, "even": 2, "appli": 2, "death": 2, "person": 2, "injuri": 2, "law": [2, 8, 11], "allow": [2, 4, 5, 13], "relat": [2, 5, 11], "brought": 2, "court": 2, "where": [2, 4, 7, 8, 10, 11, 13], "defend": 2, "maintain": [2, 8], "princip": 2, "busi": 2, "refer": [2, 7, 11, 13], "conflict": 2, "provis": 2, "noth": [2, 5], "prevent": 2, "abil": 2, "bring": 2, "complet": [2, 10], "concern": 2, "subject": [2, 5, 6, 7, 8, 10, 13], "matter": 2, "hereof": 2, "held": 2, "unenforc": 2, "reform": 2, "enforc": 2, "languag": 2, "constru": 2, "drafter": 2, "mozilla": [2, 5, 6, 7, 8, 10, 13], "foundat": 2, "steward": 2, "publish": 2, "given": [2, 4, 5, 8, 10, 13], "distinguish": 2, "number": [2, 4, 7, 10], "want": [2, 4, 13], "renam": 2, "name": [2, 3, 4, 5, 7, 8, 9, 13], "note": [2, 8, 10], "v": [2, 11], "mpl": [2, 5, 6, 7, 8, 10, 13], "http": [2, 5, 6, 7, 8, 10, 13, 15], "org": [2, 5, 6, 7, 8, 10, 13], "desir": 2, "put": [2, 10], "locat": [2, 4], "relev": 2, "directori": [2, 5, 7], "like": [2, 4, 5], "look": [2, 5, 7], "add": [2, 5, 6, 13], "accur": [2, 5], "defin": [2, 5], "train": [3, 4, 5, 7, 8], "predict": [3, 4, 5, 8, 10, 11, 13], "build_model": [3, 4], "process_dataset": [3, 4, 13], "save": [3, 4, 5, 7, 8, 11, 13], "restor": [3, 4, 13], "tune": [3, 4], "benchmark_nam": [3, 5, 13], "benchmark_path": [3, 5], "config_path": [3, 5, 8, 13], "log_path": [3, 4, 5, 7, 8, 9, 11], "evaluate_simul": [3, 5], "__delattr__": [3, 5], "__dir__": [3, 5], "__eq__": [3, 5], "__format__": [3, 5], "__ge__": [3, 5], "__getattribute__": [3, 5], "__gt__": [3, 5], "__hash__": [3, 5], "__init_subclass__": [3, 5], "__le__": [3, 5], "__lt__": [3, 5], "__ne__": [3, 5], "__new__": [3, 5], "__reduce__": [3, 5], "__reduce_ex__": [3, 5], "__repr__": [3, 5], "__setattr__": [3, 5], "__sizeof__": [3, 5], "__str__": [3, 5, 6], "__subclasshook__": [3, 5], "load": [3, 5, 7, 11], "get_env": [3, 5, 13], "create_config": [3, 6], "get_opt": [3, 6], "get_options_dict": [3, 6], "edit_config_opt": [3, 6], "remove_sect": [3, 6], "remove_config_opt": [3, 6], "sampl": [3, 7, 13], "get_data": [3, 7], "attr_nam": [3, 7], "all_vari": [3, 7], "get_siz": [3, 7], "extract_data": [3, 7], "reconstruct_output": [3, 7], "config_sect": [3, 8], "machine_learn": [3, 8], "physics_compli": [3, 8, 10], "industrial_readi": [3, 8], "from_benchmark": [3, 8], "from_dataset": [3, 8], "evaluate_ml": [3, 8], "evaluate_phys": [3, 8], "evaluate_industrial_readi": [3, 8], "evaluate_ood": [3, 8], "compare_simul": [3, 8], "powergridevalu": [3, 5, 8], "metricfactori": [3, 8], "register_metr": [3, 8], "register_metric_dict": [3, 8], "get_metr": [3, 8], "info": [3, 9], "warn": [3, 9], "error": [3, 4, 9, 10], "power_grid": [3, 10], "get_stat": [3, 13], "modify_st": [3, 13], "init": [3, 10, 11, 13], "data_to_dict": [3, 13], "seed": [3, 7, 13], "sample_chron": [3, 13], "visualize_network": [3, 13], "visualize_network_reference_topologi": [3, 13], "class": [4, 5, 6, 7, 8, 9, 13], "str": [4, 5, 6, 7, 8, 9, 10, 11, 13], "none": [4, 5, 6, 7, 8, 9, 11, 13], "model": [4, 13], "torch": 4, "nn": 4, "kwarg": [4, 5, 6, 8, 11, 13], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 13], "base": [4, 5, 6, 7, 8, 9, 13], "abc": [4, 5], "augment": [4, 5, 8, 11, 13], "These": [4, 11, 13], "anyth": [4, 13], "emul": [4, 13], "behaviour": [4, 13], "meant": [4, 13], "data": [4, 5, 7, 11, 13], "abstractmethod": [4, 5], "train_dataset": 4, "val_dataset": 4, "union": [4, 5, 6, 7, 8, 13], "paramet": [4, 5, 6, 7, 8, 10, 11, 13], "iter": [4, 11], "nb_iter": 4, "full": [4, 13], "build": 4, "neural": [4, 13], "network": [4, 5, 6, 7, 8, 10, 13], "built": [4, 13], "bool": [4, 5, 7], "transform": [4, 13], "state": [4, 13], "row": [4, 7, 10, 13], "someth": [4, 7, 13], "exampl": [4, 7, 8, 10, 13], "path": [4, 5, 6, 7, 8, 11, 13], "It": [4, 5, 7, 8, 10, 11, 13], "expect": [4, 7], "rais": [4, 5, 7, 8, 13], "cannot": [4, 7], "object": [4, 5, 6, 7, 8, 9, 13], "A": [4, 5, 7, 11, 13], "hyper": 4, "leapnet": 4, "type": [4, 5, 7, 8, 10, 11, 13], "dict": [4, 5, 7, 8, 11, 13], "sizes_lay": 4, "tupl": [4, 7, 11, 13], "150": 4, "layer_act": 4, "relu": 4, "lr": 4, "0003": 4, "batch_siz": 4, "128": 4, "epoch": 4, "5": 4, "mse": [4, 8], "n_fold": 4, "int": [4, 5, 7, 11, 13], "3": [4, 11, 15], "verbos": 4, "1": [4, 10, 11], "n_job": 4, "run": [4, 15], "grid": [4, 5, 8, 13], "valid": [4, 5, 7], "over": [4, 10, 11, 13], "set": [4, 7, 10, 11, 13], "fold": 4, "could": [4, 8], "list": [4, 6, 7, 11], "fine": 4, "variou": [4, 5, 8], "layer": 4, "size": [4, 5, 7], "default": [4, 5, 6, 7, 8, 10, 13], "activ": [4, 5, 15], "rate": 4, "3e": 4, "4": [4, 11], "batch": [4, 7], "phase": 4, "job": 4, "parallel": 4, "return": [4, 5, 6, 7, 8, 10, 11, 13], "take": [5, 7, 10], "test": [5, 7, 8], "request": 5, "attribut": [5, 7, 8], "correspond": [5, 7, 10, 13], "experi": [5, 7, 13, 15], "scenario": [5, 6, 8], "pathlib": 5, "augmnet": 5, "point": [5, 8, 10], "view": [5, 8], "parameter": 5, "befor": 5, "pass": 5, "appropri": 5, "empti": [5, 13], "dictionari": [5, 6, 7, 8, 11, 13], "save_path": [5, 8], "evalut": 5, "criteria": [5, 8], "predefin": 5, "singl": [5, 7, 10], "overload": 5, "call": [5, 7, 11, 13], "multipl": [5, 8], "indic": [5, 11], "addit": 5, "self": [5, 6, 7, 13], "implement": [5, 7, 8, 10, 11, 13], "delattr": 5, "dir": 5, "valu": [5, 6, 7, 10, 11], "format_spec": 5, "formatt": 5, "getattr": 5, "hash": 5, "when": [5, 7, 10], "subclass": [5, 8, 13], "overridden": [5, 8], "extend": 5, "arg": 5, "new": [5, 8, 11], "signatur": 5, "helper": 5, "pickl": 5, "protocol": 5, "repr": 5, "setattr": 5, "memori": 5, "byte": 5, "abstract": [5, 13], "overrid": 5, "custom": 5, "issubclass": 5, "invok": 5, "earli": 5, "abcmeta": 5, "__subclasscheck__": 5, "true": [5, 7, 8, 10], "fals": [5, 7], "notimpl": 5, "normal": [5, 10], "algorithm": 5, "outcom": 5, "cach": 5, "licenc": [5, 6, 7, 8, 10, 13], "c": [5, 6, 7, 8, 10, 13], "2021": [5, 6, 7, 8, 10, 13], "www": [5, 6, 7, 8, 10, 13], "en": [5, 6, 8, 10], "txt": [5, 6, 7, 8, 10, 13], "code": [5, 6, 7, 8, 10, 13], "form": [5, 6, 7, 8, 10, 13], "term": [5, 6, 7, 8, 10, 13], "version": [5, 6, 7, 8, 10, 13], "2": [5, 6, 7, 8, 10, 11, 13], "distribut": [5, 6, 7, 8, 10, 13], "spdx": [5, 6, 7, 8, 10, 13], "identifi": [5, 6, 7, 8, 10, 13], "python": [5, 6, 7, 8, 10, 13, 15], "load_data_set": 5, "powergrid": [5, 7, 8, 13], "remain": 5, "configur": 5, "turn": 5, "alreadi": [5, 6, 8], "instanc": [5, 8], "log": [5, 7, 8, 11, 13], "independ": [5, 10], "mayb": 5, "better": 5, "idea": 5, "nb_sample_train": 5, "nb_sample_v": 5, "nb_sample_test": 5, "nb_sample_test_ood_topo": 5, "do_store_phys": [5, 7], "save_predict": 5, "same": 5, "shoud": 5, "ugmented_simul": 5, "argument": [5, 11], "flow": [5, 13], "runtimeerror": [5, 7, 13], "unknown": 5, "select": 5, "env_kwarg": [5, 13], "getter": [5, 13], "environ": [5, 7, 11, 13], "grid2op": [5, 7, 11, 13], "usag": [6, 7, 10, 11, 13], "__init__": 6, "py": 6, "section_nam": 6, "eas": 6, "parser": 6, "framework": [6, 7], "scenario_nam": 6, "exist": [6, 8], "format": 6, "retrun": 6, "edit": 6, "ad": [6, 11], "extra": [6, 13], "configpars": 6, "databas": 7, "real": 7, "applic": 7, "might": [7, 13], "repositori": [7, 15], "actor": [7, 13], "path_out": [7, 13], "nb_sampl": 7, "simulator_se": 7, "actor_se": 7, "input": 7, "we": [7, 10, 15], "simulation_nam": 7, "store": [7, 8, 11], "plain": 7, "them": [7, 8], "least": [7, 8], "metadata": 7, "involv": 7, "exact": 7, "definit": 7, "now": [7, 13], "usecas": 7, "modifi": [7, 13], "irrelev": 7, "step": [7, 11, 13, 15], "previous": 7, "match": [7, 10], "experiment_nam": 7, "sampler": 7, "callabl": [7, 8], "uniform": [7, 10], "random": 7, "element": [7, 10], "amongst": 7, "higher": 7, "replac": [7, 10, 11], "current": [7, 8, 11], "unus": 7, "complex": 7, "get": [7, 8], "integ": [7, 13], "2022": [7, 13], "rte": [7, 13], "comment": 7, "line": [7, 11], "theta": [7, 11], "generate_data": 7, "prod_p": [7, 11], "prod_v": 7, "load_p": 7, "load_q": 7, "line_statu": 7, "topo_vect": 7, "a_or": [7, 11], "a_ex": [7, 11], "p_or": [7, 11], "p_ex": [7, 11], "q_or": [7, 11], "q_ex": [7, 11], "prod_q": 7, "load_v": 7, "v_or": [7, 11], "v_ex": [7, 11], "theta_or": 7, "theta_ex": 7, "baseag": [7, 13], "nb_samples_per_chron": 7, "288": 7, "agent": [7, 13], "powergird": 7, "neg": 7, "found": [7, 8], "Not": 7, "There": 7, "uniformli": 7, "guarante": 7, "sef": 7, "consecut": 7, "batch1": 7, "batch2": 7, "count": 7, "nb": 7, "just": 7, "issu": 7, "retriev": 7, "kei": [7, 11, 13], "variabl": [7, 8, 10, 11], "size_x": 7, "size_tau": 7, "size_i": 7, "concat": 7, "extract": 7, "x": 7, "y": 7, "concaten": 7, "arrai": [7, 11], "output": 7, "ndarrai": [7, 10], "reconstruct": 7, "np": 7, "reconstrut": 7, "transportevalu": 8, "ml": [8, 15], "indr": 8, "classmethod": 8, "intial": 8, "both": [8, 11, 13], "observ": [8, 11, 13], "categori": 8, "readi": 8, "ood": 8, "notic": 8, "minimalist": 8, "two": [8, 10, 11, 13], "mae": 8, "scikit": 8, "machin": 8, "out": 8, "capac": 8, "bonu": 8, "tak": 8, "report": [8, 11], "side": 8, "_description_": [8, 13], "main": [8, 13], "verifi": [8, 11], "mape90": 8, "compris": [8, 11], "verif": [8, 11], "basic": 8, "voltag": [8, 10, 11], "posit": [8, 11], "eq": 8, "disc_lin": 8, "conserv": 8, "energi": [8, 11], "electr": [8, 11], "kirchhoff": [8, 11], "joul": 8, "infer": 8, "scalabl": 8, "factori": 8, "regist": 8, "metric_nam": 8, "creator": 8, "metric_dict": 8, "valueerror": 8, "messag": 9, "y_true": 10, "y_pred": 10, "multioutput": 10, "threshold": 10, "rmse": 10, "norm": 10, "squar": 10, "averag": [10, 11], "between": [10, 11, 13], "give": [10, 13], "vector": 10, "mani": 10, "column": 10, "Then": 10, "root": 10, "divid": 10, "max": 10, "min": 10, "consist": 10, "previou": 10, "bellow": 10, "avoid": 10, "numer": 10, "instabl": 10, "almost": 10, "equal": 10, "everywher": 10, "happen": 10, "system": [10, 13], "alwai": 10, "constant": 10, "deactiv": 10, "featur": 10, "shape": 10, "numpi": 10, "Its": 10, "aggreg": 10, "float": [10, 11], "nrmse_": 10, "compon": 10, "percentag": [10, 11], "ignor": 10, "consid": [10, 11], "mape_": 10, "quantil": 10, "q": [10, 11], "highest": 10, "wise": 10, "domain": [10, 13], "interest": 10, "correctli": 10, "ratio": 10, "keep": [10, 13], "10": 10, "kept": 10, "mape_percentil": 10, "pearson": 10, "correl": 10, "coeffici": 10, "matric": 10, "suppos": 10, "routin": 10, "thu": 10, "nan": 10, "instead": 10, "r": 10, "verify_current_po": [10, 11], "verify_voltage_po": [10, 11], "verify_loss_po": [10, 11], "verify_disc_lin": [10, 11], "verify_current_eq": [10, 11], "verify_loss": [10, 11], "verify_kcl": [10, 11], "result_level": 11, "check": 11, "extrem": 11, "weher": 11, "supplementari": 11, "futur": 11, "greater": 11, "zero": 11, "null": 11, "disconnect": 11, "p": 11, "sqrt": 11, "updat": 11, "equat": [11, 13], "henc": 11, "need": 11, "ep": 11, "product": 11, "wai": 11, "toler": 11, "about": 11, "el": 11, "violation_percentag": 11, "violat": 11, "failed_indic": 11, "env": [11, 13], "ref_ob": 11, "tol": 11, "001": 11, "check_solut": 11, "lightsim2grid": 11, "To": 11, "gri2op": 11, "ground": 11, "truth": 11, "angl": 11, "kcl": 11, "kcl_valu": 11, "global": 11, "violation_prop_obs_level": 11, "proport": 11, "level": 11, "violation_prop_node_level": 11, "substat": 11, "actor_typ": 13, "intern": 13, "compat": 13, "onc": 13, "anoth": 13, "get_result": 13, "one_exampl": 13, "ideal": 13, "initial_chronics_id": 13, "chronics_selected_regex": 13, "accept": 13, "baseact": 13, "episod": 13, "chronic": 13, "among": 13, "converg": 13, "plotmatplot": 13, "show": [13, 15], "evolut": 13, "plot_kwarg": 13, "visual": 13, "topologi": 13, "dc_approxim": 13, "grid_path": 13, "solver": 13, "linear": 13, "solv": 13, "goal": 13, "doubl": 13, "illustr": 13, "strict": 13, "And": 13, "secondli": 13, "whole": 13, "dictionnari": 13, "_attr_i": 13, "done": 13, "constructor": 13, "lip": 15, "last": 15, "github": 15, "depend": 15, "6": 15, "cd": 15, "my": 15, "project": 15, "folder": 15, "pip3": 15, "u": 15, "python3": 15, "m": 15, "venv_lip": 15, "bin": 15, "git": 15, "clone": 15, "com": 15, "mleyliabadi": 15, "checkout": 15, "dev": 15, "e": 15, "recommend": 15}, "objects": {"": [[3, 0, 0, "-", "lips"]], "lips": [[4, 0, 0, "-", "augmented_simulators"], [5, 0, 0, "-", "benchmark"], [6, 0, 0, "-", "config"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "evaluation"], [9, 0, 0, "-", "logger"], [10, 0, 0, "-", "metrics"], [13, 0, 0, "-", "physical_simulator"]], "lips.augmented_simulators": [[4, 1, 1, "", "AugmentedSimulator"], [4, 0, 0, "-", "hyperParameterTuner"]], "lips.augmented_simulators.AugmentedSimulator": [[4, 2, 1, "", "build_model"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "process_dataset"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"], [4, 2, 1, "", "train"]], "lips.augmented_simulators.hyperParameterTuner": [[4, 1, 1, "", "HyperParameterTuner"]], "lips.augmented_simulators.hyperParameterTuner.HyperParameterTuner": [[4, 3, 1, "", "augmented_simulator"], [4, 2, 1, "", "tune"]], "lips.benchmark": [[5, 0, 0, "-", "Benchmark"], [5, 0, 0, "-", "powergridBenchmark"]], "lips.benchmark.Benchmark": [[5, 4, 1, "", "__delattr__"], [5, 4, 1, "", "__dir__"], [5, 4, 1, "", "__eq__"], [5, 4, 1, "", "__format__"], [5, 4, 1, "", "__ge__"], [5, 4, 1, "", "__getattribute__"], [5, 4, 1, "", "__gt__"], [5, 4, 1, "", "__hash__"], [5, 4, 1, "", "__init_subclass__"], [5, 4, 1, "", "__le__"], [5, 4, 1, "", "__lt__"], [5, 4, 1, "", "__ne__"], [5, 4, 1, "", "__new__"], [5, 4, 1, "", "__reduce__"], [5, 4, 1, "", "__reduce_ex__"], [5, 4, 1, "", "__repr__"], [5, 4, 1, "", "__setattr__"], [5, 4, 1, "", "__sizeof__"], [5, 4, 1, "", "__str__"], [5, 4, 1, "", "__subclasshook__"], [5, 3, 1, "id4", "augmented_simulator"], [5, 3, 1, "id0", "benchmark_name"], [5, 3, 1, "id1", "benchmark_path"], [5, 3, 1, "id2", "config_path"], [5, 3, 1, "id3", "dataset"], [5, 2, 1, "", "evaluate_simulator"], [5, 3, 1, "id5", "evaluation"], [5, 3, 1, "id6", "log_path"]], "lips.benchmark.powergridBenchmark": [[5, 1, 1, "", "PowerGridBenchmark"], [5, 4, 1, "", "get_env"]], "lips.benchmark.powergridBenchmark.PowerGridBenchmark": [[5, 2, 1, "", "evaluate_simulator"], [5, 2, 1, "", "generate"], [5, 2, 1, "", "load"]], "lips.config": [[6, 1, 1, "", "ConfigManager"], [6, 0, 0, "-", "configmanager"]], "lips.config.ConfigManager": [[6, 2, 1, "", "__str__"], [6, 2, 1, "", "create_config"], [6, 2, 1, "", "edit_config_option"], [6, 2, 1, "", "get_option"], [6, 2, 1, "", "get_options_dict"], [6, 2, 1, "", "remove_config_option"], [6, 2, 1, "", "remove_section"]], "lips.config.configmanager": [[6, 1, 1, "", "ConfigManager"]], "lips.config.configmanager.ConfigManager": [[6, 2, 1, "", "__str__"], [6, 2, 1, "", "create_config"], [6, 2, 1, "", "edit_config_option"], [6, 2, 1, "", "get_option"], [6, 2, 1, "", "get_options_dict"], [6, 2, 1, "", "remove_config_option"], [6, 2, 1, "", "remove_section"]], "lips.dataset": [[7, 1, 1, "", "DataSet"], [7, 0, 0, "-", "dataSet"], [7, 0, 0, "-", "powergridDataSet"]], "lips.dataset.DataSet": [[7, 2, 1, "", "generate"], [7, 2, 1, "", "get_data"], [7, 2, 1, "", "load"], [7, 2, 1, "", "sample"]], "lips.dataset.dataSet": [[7, 1, 1, "", "DataSet"]], "lips.dataset.dataSet.DataSet": [[7, 2, 1, "", "generate"], [7, 2, 1, "", "get_data"], [7, 2, 1, "", "load"], [7, 2, 1, "", "sample"]], "lips.dataset.powergridDataSet": [[7, 1, 1, "", "PowerGridDataSet"]], "lips.dataset.powergridDataSet.PowerGridDataSet": [[7, 3, 1, "", "ALL_VARIABLES"], [7, 3, 1, "", "attr_names"], [7, 2, 1, "", "extract_data"], [7, 2, 1, "", "generate"], [7, 2, 1, "", "get_data"], [7, 2, 1, "", "get_sizes"], [7, 2, 1, "", "load"], [7, 3, 1, "", "log_path"], [7, 3, 1, "", "name"], [7, 2, 1, "", "reconstruct_output"], [7, 2, 1, "", "sample"]], "lips.evaluation": [[8, 1, 1, "", "Evaluation"], [8, 0, 0, "-", "evaluation"], [8, 0, 0, "-", "powergrid_evaluation"], [8, 0, 0, "-", "utils"]], "lips.evaluation.Evaluation": [[8, 3, 1, "", "INDUSTRIAL_READINESS"], [8, 3, 1, "", "MACHINE_LEARNING"], [8, 3, 1, "", "PHYSICS_COMPLIANCES"], [8, 2, 1, "", "compare_simulators"], [8, 3, 1, "", "config"], [8, 3, 1, "", "config_path"], [8, 3, 1, "", "config_section"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "evaluate_industrial_readiness"], [8, 2, 1, "", "evaluate_ml"], [8, 2, 1, "", "evaluate_ood"], [8, 2, 1, "", "evaluate_physics"], [8, 2, 1, "", "from_benchmark"], [8, 2, 1, "", "from_dataset"], [8, 3, 1, "", "log_path"]], "lips.evaluation.evaluation": [[8, 1, 1, "", "Evaluation"]], "lips.evaluation.evaluation.Evaluation": [[8, 3, 1, "", "INDUSTRIAL_READINESS"], [8, 3, 1, "", "MACHINE_LEARNING"], [8, 3, 1, "", "PHYSICS_COMPLIANCES"], [8, 2, 1, "", "compare_simulators"], [8, 3, 1, "", "config"], [8, 3, 1, "", "config_path"], [8, 3, 1, "", "config_section"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "evaluate_industrial_readiness"], [8, 2, 1, "", "evaluate_ml"], [8, 2, 1, "", "evaluate_ood"], [8, 2, 1, "", "evaluate_physics"], [8, 2, 1, "", "from_benchmark"], [8, 2, 1, "", "from_dataset"], [8, 3, 1, "", "log_path"]], "lips.evaluation.powergrid_evaluation": [[8, 1, 1, "", "PowerGridEvaluation"]], "lips.evaluation.powergrid_evaluation.PowerGridEvaluation": [[8, 2, 1, "", "evaluate"], [8, 2, 1, "", "evaluate_industrial_readiness"], [8, 2, 1, "", "evaluate_ml"], [8, 2, 1, "", "evaluate_physics"], [8, 2, 1, "", "from_benchmark"]], "lips.evaluation.utils": [[8, 1, 1, "", "MetricFactory"]], "lips.evaluation.utils.MetricFactory": [[8, 2, 1, "", "get_metric"], [8, 2, 1, "", "register_metric"], [8, 2, 1, "", "register_metric_dict"]], "lips.logger": [[9, 1, 1, "", "CustomLogger"], [9, 0, 0, "-", "customLogger"]], "lips.logger.CustomLogger": [[9, 2, 1, "", "error"], [9, 2, 1, "", "info"], [9, 2, 1, "", "warning"]], "lips.logger.customLogger": [[9, 1, 1, "", "CustomLogger"]], "lips.logger.customLogger.CustomLogger": [[9, 2, 1, "", "error"], [9, 2, 1, "", "info"], [9, 2, 1, "", "warning"]], "lips.metrics": [[10, 4, 1, "", "mape"], [10, 4, 1, "", "mape_quantile"], [10, 4, 1, "", "nrmse"], [10, 4, 1, "", "pearson_r"], [11, 0, 0, "-", "power_grid"]], "lips.metrics.power_grid": [[11, 0, 0, "-", "physics_compliances"]], "lips.metrics.power_grid.physics_compliances": [[11, 4, 1, "", "verify_current_eq"], [11, 4, 1, "", "verify_current_pos"], [11, 4, 1, "", "verify_disc_lines"], [11, 4, 1, "", "verify_kcl"], [11, 4, 1, "", "verify_loss"], [11, 4, 1, "", "verify_loss_pos"], [11, 4, 1, "", "verify_voltage_pos"]], "lips.physical_simulator": [[13, 1, 1, "", "Grid2opSimulator"], [13, 1, 1, "", "PhysicalSimulator"], [13, 1, 1, "", "PhysicsSolver"], [13, 0, 0, "-", "dcApproximationAS"], [13, 0, 0, "-", "grid2opSimulator"], [13, 0, 0, "-", "physicalSimulator"], [13, 0, 0, "-", "physicsSolver"]], "lips.physical_simulator.Grid2opSimulator": [[13, 2, 1, "", "get_state"], [13, 2, 1, "", "modify_state"], [13, 2, 1, "", "sample_chronics"], [13, 2, 1, "", "seed"], [13, 2, 1, "", "visualize_network"], [13, 2, 1, "", "visualize_network_reference_topology"]], "lips.physical_simulator.PhysicalSimulator": [[13, 2, 1, "", "get_state"], [13, 2, 1, "", "modify_state"]], "lips.physical_simulator.PhysicsSolver": [[13, 2, 1, "", "compute"], [13, 2, 1, "", "data_to_dict"], [13, 2, 1, "", "init"], [13, 2, 1, "", "process_dataset"], [13, 2, 1, "", "restore"], [13, 2, 1, "", "save"]], "lips.physical_simulator.dcApproximationAS": [[13, 1, 1, "", "DCApproximationAS"]], "lips.physical_simulator.dcApproximationAS.DCApproximationAS": [[13, 2, 1, "", "compute"], [13, 2, 1, "", "init"], [13, 2, 1, "", "process_dataset"], [13, 2, 1, "", "restore"], [13, 2, 1, "", "save"]], "lips.physical_simulator.grid2opSimulator": [[13, 1, 1, "", "Grid2opSimulator"], [13, 4, 1, "", "get_env"]], "lips.physical_simulator.grid2opSimulator.Grid2opSimulator": [[13, 2, 1, "", "get_state"], [13, 2, 1, "", "modify_state"], [13, 2, 1, "", "sample_chronics"], [13, 2, 1, "", "seed"], [13, 2, 1, "", "visualize_network"], [13, 2, 1, "", "visualize_network_reference_topology"]], "lips.physical_simulator.physicalSimulator": [[13, 1, 1, "", "PhysicalSimulator"]], "lips.physical_simulator.physicalSimulator.PhysicalSimulator": [[13, 2, 1, "", "get_state"], [13, 2, 1, "", "modify_state"]], "lips.physical_simulator.physicsSolver": [[13, 1, 1, "", "PhysicsSolver"]], "lips.physical_simulator.physicsSolver.PhysicsSolver": [[13, 2, 1, "", "compute"], [13, 2, 1, "", "data_to_dict"], [13, 2, 1, "", "init"], [13, 2, 1, "", "process_dataset"], [13, 2, 1, "", "restore"], [13, 2, 1, "", "save"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"help": 0, "welcom": 1, "lip": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "": 1, "document": 1, "get": [1, 15], "start": [1, 15], "technic": 1, "guid": 1, "indic": 1, "tabl": 1, "licens": 2, "1": 2, "definit": 2, "contributor": 2, "2": 2, "version": 2, "3": 2, "contribut": [2, 15], "4": 2, "cover": 2, "softwar": 2, "5": 2, "incompat": 2, "With": 2, "secondari": 2, "6": 2, "execut": 2, "form": 2, "7": 2, "larger": 2, "work": 2, "8": 2, "9": 2, "10": 2, "modif": 2, "11": 2, "patent": 2, "claim": 2, "12": 2, "13": 2, "sourc": [2, 15], "code": 2, "14": 2, "you": 2, "your": 2, "grant": 2, "condit": 2, "effect": 2, "date": 2, "limit": 2, "scope": 2, "subsequ": 2, "represent": 2, "fair": 2, "us": 2, "respons": 2, "distribut": 2, "notic": 2, "applic": 2, "addit": 2, "term": 2, "inabl": 2, "compli": 2, "due": 2, "statut": 2, "regul": 2, "termin": 2, "disclaim": 2, "warranti": 2, "liabil": 2, "litig": 2, "miscellan": 2, "new": 2, "modifi": 2, "i": 2, "exhibit": 2, "A": 2, "b": 2, "packag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [3, 10], "augmented_simul": 4, "submodul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "augmentedsimul": 4, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "fullyconnecteda": 4, "hyperparametertun": 4, "leapneta": 4, "benchmark": 5, "powergridbenchmark": 5, "todo": [5, 7, 11, 13], "config": 6, "configmanag": 6, "dataset": 7, "powergriddataset": 7, "evalu": 8, "powergrid_evalu": 8, "transport_evalu": 8, "util": 8, "logger": 9, "customlogg": 9, "metric": [10, 11], "ml_metric": 10, "power_grid": 11, "physics_compli": 11, "neurips_benchmark": 12, "benchmark1": 12, "benchmark2": 12, "benchmark3": 12, "physical_simul": 13, "dcapproximationa": 13, "grid2opsimul": 13, "physicalsimul": 13, "physicssolv": 13, "instal": 15, "requir": 15, "setup": 15, "virtualenv": 15, "option": 15, "creat": 15, "virtual": 15, "environ": 15, "enter": 15, "from": 15, "To": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Help": [[0, "help"]], "Welcome to LIPS\u2019s documentation!": [[1, "welcome-to-lips-s-documentation"]], "GETTING STARTED": [[1, null]], "TECHNICAL DOCUMENTATION": [[1, null]], "GUIDE": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "License": [[2, "license"]], "1. Definitions": [[2, "definitions"]], "1.1. \u201cContributor\u201d": [[2, "contributor"]], "1.2. \u201cContributor Version\u201d": [[2, "contributor-version"]], "1.3. \u201cContribution\u201d": [[2, "contribution"]], "1.4. \u201cCovered Software\u201d": [[2, "covered-software"]], "1.5. \u201cIncompatible With Secondary Licenses\u201d": [[2, "incompatible-with-secondary-licenses"]], "1.6. \u201cExecutable Form\u201d": [[2, "executable-form"]], "1.7. \u201cLarger Work\u201d": [[2, "larger-work"]], "1.8. \u201cLicense\u201d": [[2, "id1"]], "1.9. \u201cLicensable\u201d": [[2, "licensable"]], "1.10. \u201cModifications\u201d": [[2, "modifications"]], "1.11. \u201cPatent Claims\u201d of a Contributor": [[2, "patent-claims-of-a-contributor"]], "1.12. \u201cSecondary License\u201d": [[2, "secondary-license"]], "1.13. \u201cSource Code Form\u201d": [[2, "source-code-form"]], "1.14. \u201cYou\u201d (or \u201cYour\u201d)": [[2, "you-or-your"]], "2. License Grants and Conditions": [[2, "license-grants-and-conditions"]], "2.1. Grants": [[2, "grants"]], "2.2. Effective Date": [[2, "effective-date"]], "2.3. Limitations on Grant Scope": [[2, "limitations-on-grant-scope"]], "2.4. Subsequent Licenses": [[2, "subsequent-licenses"]], "2.5. Representation": [[2, "representation"]], "2.6. Fair Use": [[2, "fair-use"]], "2.7. Conditions": [[2, "conditions"]], "3. Responsibilities": [[2, "responsibilities"]], "3.1. Distribution of Source Form": [[2, "distribution-of-source-form"]], "3.2. Distribution of Executable Form": [[2, "distribution-of-executable-form"]], "3.3. Distribution of a Larger Work": [[2, "distribution-of-a-larger-work"]], "3.4. Notices": [[2, "notices"]], "3.5. Application of Additional Terms": [[2, "application-of-additional-terms"]], "4. Inability to Comply Due to Statute or Regulation": [[2, "inability-to-comply-due-to-statute-or-regulation"]], "5. Termination": [[2, "termination"]], "6. Disclaimer of Warranty": [[2, "disclaimer-of-warranty"]], "7. Limitation of Liability": [[2, "limitation-of-liability"]], "8. Litigation": [[2, "litigation"]], "9. Miscellaneous": [[2, "miscellaneous"]], "10. Versions of the License": [[2, "versions-of-the-license"]], "10.1. New Versions": [[2, "new-versions"]], "10.2. Effect of New Versions": [[2, "effect-of-new-versions"]], "10.3. Modified Versions": [[2, "modified-versions"]], "10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses": [[2, "distributing-source-code-form-that-is-incompatible-with-secondary-licenses"]], "Exhibit A - Source Code Form License Notice": [[2, "exhibit-a-source-code-form-license-notice"]], "Exhibit B - \u201cIncompatible With Secondary Licenses\u201d Notice": [[2, "exhibit-b-incompatible-with-secondary-licenses-notice"]], "lips package": [[3, "module-lips"]], "Subpackages": [[3, "subpackages"], [10, "subpackages"]], "lips.augmented_simulators package": [[4, "module-lips.augmented_simulators"]], "Submodules": [[4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "lips.augmented_simulators.augmentedSimulator module": [[4, "lips-augmented-simulators-augmentedsimulator-module"]], "lips.augmented_simulators.fullyConnectedAS module": [[4, "lips-augmented-simulators-fullyconnectedas-module"]], "lips.augmented_simulators.hyperParameterTuner module": [[4, "module-lips.augmented_simulators.hyperParameterTuner"]], "lips.augmented_simulators.leapNetAS module": [[4, "lips-augmented-simulators-leapnetas-module"]], "lips.benchmark package": [[5, "module-lips.benchmark"]], "lips.benchmark.Benchmark module": [[5, "module-lips.benchmark.Benchmark"]], "lips.benchmark.powergridBenchmark module": [[5, "module-lips.benchmark.powergridBenchmark"]], "Todo": [[5, "id7"], [7, "id1"], [11, "id1"], [11, "id2"], [13, "id1"]], "lips.config package": [[6, "module-lips.config"]], "lips.config.configmanager module": [[6, "module-lips.config.configmanager"]], "lips.dataset package": [[7, "module-lips.dataset"]], "lips.dataset.dataSet module": [[7, "module-lips.dataset.dataSet"]], "lips.dataset.powergridDataSet module": [[7, "module-lips.dataset.powergridDataSet"]], "lips.evaluation package": [[8, "module-lips.evaluation"]], "lips.evaluation.evaluation module": [[8, "module-lips.evaluation.evaluation"]], "lips.evaluation.powergrid_evaluation module": [[8, "module-lips.evaluation.powergrid_evaluation"]], "lips.evaluation.transport_evaluation module": [[8, "lips-evaluation-transport-evaluation-module"]], "lips.evaluation.utils module": [[8, "module-lips.evaluation.utils"]], "lips.logger package": [[9, "module-lips.logger"]], "lips.logger.customLogger module": [[9, "module-lips.logger.customLogger"]], "lips.metrics package": [[10, "module-lips.metrics"]], "lips.metrics.ml_metrics module": [[10, "lips-metrics-ml-metrics-module"]], "lips.metrics.power_grid package": [[11, "module-lips.metrics.power_grid"]], "lips.metrics.power_grid.physics_compliances module": [[11, "module-lips.metrics.power_grid.physics_compliances"]], "lips.neurips_benchmark package": [[12, "lips-neurips-benchmark-package"]], "lips.neurips_benchmark.benchmark1 module": [[12, "lips-neurips-benchmark-benchmark1-module"]], "lips.neurips_benchmark.benchmark2 module": [[12, "lips-neurips-benchmark-benchmark2-module"]], "lips.neurips_benchmark.benchmark3 module": [[12, "lips-neurips-benchmark-benchmark3-module"]], "lips.physical_simulator package": [[13, "module-lips.physical_simulator"]], "lips.physical_simulator.dcApproximationAS module": [[13, "module-lips.physical_simulator.dcApproximationAS"]], "lips.physical_simulator.grid2opSimulator module": [[13, "module-lips.physical_simulator.grid2opSimulator"]], "lips.physical_simulator.physicalSimulator module": [[13, "module-lips.physical_simulator.physicalSimulator"]], "lips.physical_simulator.physicsSolver module": [[13, "module-lips.physical_simulator.physicsSolver"]], "lips": [[14, "lips"]], "Getting started": [[15, "getting-started"]], "Installation": [[15, "installation"]], "Requirements": [[15, "requirements"]], "Setup a Virtualenv (optional)": [[15, "setup-a-virtualenv-optional"]], "Create a virtual environment": [[15, "create-a-virtual-environment"]], "Enter virtual environment": [[15, "enter-virtual-environment"]], "Install from source": [[15, "install-from-source"]], "To contribute": [[15, "to-contribute"]]}, "indexentries": {"lips": [[3, "module-lips"]], "module": [[3, "module-lips"], [4, "module-lips.augmented_simulators"], [4, "module-lips.augmented_simulators.hyperParameterTuner"], [5, "module-lips.benchmark"], [5, "module-lips.benchmark.Benchmark"], [5, "module-lips.benchmark.powergridBenchmark"], [6, "module-lips.config"], [6, "module-lips.config.configmanager"], [7, "module-lips.dataset"], [7, "module-lips.dataset.dataSet"], [7, "module-lips.dataset.powergridDataSet"], [8, "module-lips.evaluation"], [8, "module-lips.evaluation.evaluation"], [8, "module-lips.evaluation.powergrid_evaluation"], [8, "module-lips.evaluation.utils"], [9, "module-lips.logger"], [9, "module-lips.logger.customLogger"], [10, "module-lips.metrics"], [11, "module-lips.metrics.power_grid"], [11, "module-lips.metrics.power_grid.physics_compliances"], [13, "module-lips.physical_simulator"], [13, "module-lips.physical_simulator.dcApproximationAS"], [13, "module-lips.physical_simulator.grid2opSimulator"], [13, "module-lips.physical_simulator.physicalSimulator"], [13, "module-lips.physical_simulator.physicsSolver"]], "augmentedsimulator (class in lips.augmented_simulators)": [[4, "lips.augmented_simulators.AugmentedSimulator"]], "hyperparametertuner (class in lips.augmented_simulators.hyperparametertuner)": [[4, "lips.augmented_simulators.hyperParameterTuner.HyperParameterTuner"]], "augmented_simulator (lips.augmented_simulators.hyperparametertuner.hyperparametertuner attribute)": [[4, "lips.augmented_simulators.hyperParameterTuner.HyperParameterTuner.augmented_simulator"]], "build_model() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.build_model"]], "lips.augmented_simulators": [[4, "module-lips.augmented_simulators"]], "lips.augmented_simulators.hyperparametertuner": [[4, "module-lips.augmented_simulators.hyperParameterTuner"]], "predict() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.predict"]], "process_dataset() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.process_dataset"]], "restore() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.restore"]], "save() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.save"]], "train() (lips.augmented_simulators.augmentedsimulator method)": [[4, "lips.augmented_simulators.AugmentedSimulator.train"]], "tune() (lips.augmented_simulators.hyperparametertuner.hyperparametertuner method)": [[4, "lips.augmented_simulators.hyperParameterTuner.HyperParameterTuner.tune"]], "benchmark (class in lips.benchmark)": [[5, "lips.benchmark.Benchmark"]], "powergridbenchmark (class in lips.benchmark.powergridbenchmark)": [[5, "lips.benchmark.powergridBenchmark.PowerGridBenchmark"]], "__delattr__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__delattr__"]], "__dir__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__dir__"]], "__eq__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__eq__"]], "__format__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__format__"]], "__ge__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__ge__"]], "__getattribute__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__getattribute__"]], "__gt__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__gt__"]], "__hash__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__hash__"]], "__init_subclass__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__init_subclass__"]], "__le__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__le__"]], "__lt__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__lt__"]], "__ne__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__ne__"]], "__new__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__new__"]], "__reduce__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__reduce__"]], "__reduce_ex__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__reduce_ex__"]], "__repr__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__repr__"]], "__setattr__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__setattr__"]], "__sizeof__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__sizeof__"]], "__str__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__str__"]], "__subclasshook__() (in module lips.benchmark.benchmark)": [[5, "lips.benchmark.Benchmark.__subclasshook__"]], "augmented_simulator (in module lips.benchmark.benchmark)": [[5, "id4"]], "augmented_simulator (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.augmented_simulator"]], "benchmark_name (in module lips.benchmark.benchmark)": [[5, "id0"]], "benchmark_name (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.benchmark_name"]], "benchmark_path (in module lips.benchmark.benchmark)": [[5, "id1"]], "benchmark_path (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.benchmark_path"]], "config_path (in module lips.benchmark.benchmark)": [[5, "id2"]], "config_path (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.config_path"]], "dataset (in module lips.benchmark.benchmark)": [[5, "id3"]], "dataset (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.dataset"]], "evaluate_simulator() (lips.benchmark.benchmark method)": [[5, "lips.benchmark.Benchmark.evaluate_simulator"]], "evaluate_simulator() (lips.benchmark.powergridbenchmark.powergridbenchmark method)": [[5, "lips.benchmark.powergridBenchmark.PowerGridBenchmark.evaluate_simulator"]], "evaluation (in module lips.benchmark.benchmark)": [[5, "id5"]], "evaluation (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.evaluation"]], "generate() (lips.benchmark.powergridbenchmark.powergridbenchmark method)": [[5, "lips.benchmark.powergridBenchmark.PowerGridBenchmark.generate"]], "get_env() (in module lips.benchmark.powergridbenchmark)": [[5, "lips.benchmark.powergridBenchmark.get_env"]], "lips.benchmark": [[5, "module-lips.benchmark"]], "lips.benchmark.benchmark": [[5, "module-lips.benchmark.Benchmark"]], "lips.benchmark.powergridbenchmark": [[5, "module-lips.benchmark.powergridBenchmark"]], "load() (lips.benchmark.powergridbenchmark.powergridbenchmark method)": [[5, "lips.benchmark.powergridBenchmark.PowerGridBenchmark.load"]], "log_path (in module lips.benchmark.benchmark)": [[5, "id6"]], "log_path (lips.benchmark.benchmark attribute)": [[5, "lips.benchmark.Benchmark.log_path"]], "configmanager (class in lips.config)": [[6, "lips.config.ConfigManager"]], "configmanager (class in lips.config.configmanager)": [[6, "lips.config.configmanager.ConfigManager"]], "__str__() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.__str__"]], "__str__() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.__str__"]], "create_config() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.create_config"]], "create_config() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.create_config"]], "edit_config_option() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.edit_config_option"]], "edit_config_option() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.edit_config_option"]], "get_option() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.get_option"]], "get_option() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.get_option"]], "get_options_dict() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.get_options_dict"]], "get_options_dict() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.get_options_dict"]], "lips.config": [[6, "module-lips.config"]], "lips.config.configmanager": [[6, "module-lips.config.configmanager"]], "remove_config_option() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.remove_config_option"]], "remove_config_option() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.remove_config_option"]], "remove_section() (lips.config.configmanager method)": [[6, "lips.config.ConfigManager.remove_section"]], "remove_section() (lips.config.configmanager.configmanager method)": [[6, "lips.config.configmanager.ConfigManager.remove_section"]], "all_variables (lips.dataset.powergriddataset.powergriddataset attribute)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.ALL_VARIABLES"]], "dataset (class in lips.dataset)": [[7, "lips.dataset.DataSet"]], "dataset (class in lips.dataset.dataset)": [[7, "lips.dataset.dataSet.DataSet"]], "powergriddataset (class in lips.dataset.powergriddataset)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet"]], "attr_names (lips.dataset.powergriddataset.powergriddataset attribute)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.attr_names"]], "extract_data() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.extract_data"]], "generate() (lips.dataset.dataset method)": [[7, "lips.dataset.DataSet.generate"]], "generate() (lips.dataset.dataset.dataset method)": [[7, "lips.dataset.dataSet.DataSet.generate"]], "generate() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.generate"]], "get_data() (lips.dataset.dataset method)": [[7, "lips.dataset.DataSet.get_data"]], "get_data() (lips.dataset.dataset.dataset method)": [[7, "lips.dataset.dataSet.DataSet.get_data"]], "get_data() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.get_data"]], "get_sizes() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.get_sizes"]], "lips.dataset": [[7, "module-lips.dataset"]], "lips.dataset.dataset": [[7, "module-lips.dataset.dataSet"]], "lips.dataset.powergriddataset": [[7, "module-lips.dataset.powergridDataSet"]], "load() (lips.dataset.dataset method)": [[7, "lips.dataset.DataSet.load"]], "load() (lips.dataset.dataset.dataset method)": [[7, "lips.dataset.dataSet.DataSet.load"]], "load() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.load"]], "log_path (lips.dataset.powergriddataset.powergriddataset attribute)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.log_path"]], "name (lips.dataset.powergriddataset.powergriddataset attribute)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.name"]], "reconstruct_output() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.reconstruct_output"]], "sample() (lips.dataset.dataset method)": [[7, "lips.dataset.DataSet.sample"]], "sample() (lips.dataset.dataset.dataset method)": [[7, "lips.dataset.dataSet.DataSet.sample"]], "sample() (lips.dataset.powergriddataset.powergriddataset method)": [[7, "lips.dataset.powergridDataSet.PowerGridDataSet.sample"]], "evaluation (class in lips.evaluation)": [[8, "lips.evaluation.Evaluation"]], "evaluation (class in lips.evaluation.evaluation)": [[8, "lips.evaluation.evaluation.Evaluation"]], "industrial_readiness (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.INDUSTRIAL_READINESS"]], "industrial_readiness (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.INDUSTRIAL_READINESS"]], "machine_learning (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.MACHINE_LEARNING"]], "machine_learning (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.MACHINE_LEARNING"]], "metricfactory (class in lips.evaluation.utils)": [[8, "lips.evaluation.utils.MetricFactory"]], "physics_compliances (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.PHYSICS_COMPLIANCES"]], "physics_compliances (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.PHYSICS_COMPLIANCES"]], "powergridevaluation (class in lips.evaluation.powergrid_evaluation)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation"]], "compare_simulators() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.compare_simulators"]], "compare_simulators() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.compare_simulators"]], "config (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.config"]], "config (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.config"]], "config_path (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.config_path"]], "config_path (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.config_path"]], "config_section (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.config_section"]], "config_section (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.config_section"]], "evaluate() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.evaluate"]], "evaluate() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.evaluate"]], "evaluate() (lips.evaluation.powergrid_evaluation.powergridevaluation method)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation.evaluate"]], "evaluate_industrial_readiness() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.evaluate_industrial_readiness"]], "evaluate_industrial_readiness() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.evaluate_industrial_readiness"]], "evaluate_industrial_readiness() (lips.evaluation.powergrid_evaluation.powergridevaluation method)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation.evaluate_industrial_readiness"]], "evaluate_ml() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.evaluate_ml"]], "evaluate_ml() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.evaluate_ml"]], "evaluate_ml() (lips.evaluation.powergrid_evaluation.powergridevaluation method)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation.evaluate_ml"]], "evaluate_ood() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.evaluate_ood"]], "evaluate_ood() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.evaluate_ood"]], "evaluate_physics() (lips.evaluation.evaluation method)": [[8, "lips.evaluation.Evaluation.evaluate_physics"]], "evaluate_physics() (lips.evaluation.evaluation.evaluation method)": [[8, "lips.evaluation.evaluation.Evaluation.evaluate_physics"]], "evaluate_physics() (lips.evaluation.powergrid_evaluation.powergridevaluation method)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation.evaluate_physics"]], "from_benchmark() (lips.evaluation.evaluation class method)": [[8, "lips.evaluation.Evaluation.from_benchmark"]], "from_benchmark() (lips.evaluation.evaluation.evaluation class method)": [[8, "lips.evaluation.evaluation.Evaluation.from_benchmark"]], "from_benchmark() (lips.evaluation.powergrid_evaluation.powergridevaluation class method)": [[8, "lips.evaluation.powergrid_evaluation.PowerGridEvaluation.from_benchmark"]], "from_dataset() (lips.evaluation.evaluation class method)": [[8, "lips.evaluation.Evaluation.from_dataset"]], "from_dataset() (lips.evaluation.evaluation.evaluation class method)": [[8, "lips.evaluation.evaluation.Evaluation.from_dataset"]], "get_metric() (lips.evaluation.utils.metricfactory method)": [[8, "lips.evaluation.utils.MetricFactory.get_metric"]], "lips.evaluation": [[8, "module-lips.evaluation"]], "lips.evaluation.evaluation": [[8, "module-lips.evaluation.evaluation"]], "lips.evaluation.powergrid_evaluation": [[8, "module-lips.evaluation.powergrid_evaluation"]], "lips.evaluation.utils": [[8, "module-lips.evaluation.utils"]], "log_path (lips.evaluation.evaluation attribute)": [[8, "lips.evaluation.Evaluation.log_path"]], "log_path (lips.evaluation.evaluation.evaluation attribute)": [[8, "lips.evaluation.evaluation.Evaluation.log_path"]], "register_metric() (lips.evaluation.utils.metricfactory method)": [[8, "lips.evaluation.utils.MetricFactory.register_metric"]], "register_metric_dict() (lips.evaluation.utils.metricfactory method)": [[8, "lips.evaluation.utils.MetricFactory.register_metric_dict"]], "customlogger (class in lips.logger)": [[9, "lips.logger.CustomLogger"]], "customlogger (class in lips.logger.customlogger)": [[9, "lips.logger.customLogger.CustomLogger"]], "error() (lips.logger.customlogger method)": [[9, "lips.logger.CustomLogger.error"]], "error() (lips.logger.customlogger.customlogger method)": [[9, "lips.logger.customLogger.CustomLogger.error"]], "info() (lips.logger.customlogger method)": [[9, "lips.logger.CustomLogger.info"]], "info() (lips.logger.customlogger.customlogger method)": [[9, "lips.logger.customLogger.CustomLogger.info"]], "lips.logger": [[9, "module-lips.logger"]], "lips.logger.customlogger": [[9, "module-lips.logger.customLogger"]], "warning() (lips.logger.customlogger method)": [[9, "lips.logger.CustomLogger.warning"]], "warning() (lips.logger.customlogger.customlogger method)": [[9, "lips.logger.customLogger.CustomLogger.warning"]], "lips.metrics": [[10, "module-lips.metrics"]], "mape() (in module lips.metrics)": [[10, "lips.metrics.mape"]], "mape_quantile() (in module lips.metrics)": [[10, "lips.metrics.mape_quantile"]], "nrmse() (in module lips.metrics)": [[10, "lips.metrics.nrmse"]], "pearson_r() (in module lips.metrics)": [[10, "lips.metrics.pearson_r"]], "lips.metrics.power_grid": [[11, "module-lips.metrics.power_grid"]], "lips.metrics.power_grid.physics_compliances": [[11, "module-lips.metrics.power_grid.physics_compliances"]], "verify_current_eq() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_current_eq"]], "verify_current_pos() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_current_pos"]], "verify_disc_lines() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_disc_lines"]], "verify_kcl() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_kcl"]], "verify_loss() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_loss"]], "verify_loss_pos() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_loss_pos"]], "verify_voltage_pos() (in module lips.metrics.power_grid.physics_compliances)": [[11, "lips.metrics.power_grid.physics_compliances.verify_voltage_pos"]], "dcapproximationas (class in lips.physical_simulator.dcapproximationas)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS"]], "grid2opsimulator (class in lips.physical_simulator)": [[13, "lips.physical_simulator.Grid2opSimulator"]], "grid2opsimulator (class in lips.physical_simulator.grid2opsimulator)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator"]], "physicalsimulator (class in lips.physical_simulator)": [[13, "lips.physical_simulator.PhysicalSimulator"]], "physicalsimulator (class in lips.physical_simulator.physicalsimulator)": [[13, "lips.physical_simulator.physicalSimulator.PhysicalSimulator"]], "physicssolver (class in lips.physical_simulator)": [[13, "lips.physical_simulator.PhysicsSolver"]], "physicssolver (class in lips.physical_simulator.physicssolver)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver"]], "compute() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.compute"]], "compute() (lips.physical_simulator.dcapproximationas.dcapproximationas method)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS.compute"]], "compute() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.compute"]], "data_to_dict() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.data_to_dict"]], "data_to_dict() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.data_to_dict"]], "get_env() (in module lips.physical_simulator.grid2opsimulator)": [[13, "lips.physical_simulator.grid2opSimulator.get_env"]], "get_state() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.get_state"]], "get_state() (lips.physical_simulator.physicalsimulator method)": [[13, "lips.physical_simulator.PhysicalSimulator.get_state"]], "get_state() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.get_state"]], "get_state() (lips.physical_simulator.physicalsimulator.physicalsimulator method)": [[13, "lips.physical_simulator.physicalSimulator.PhysicalSimulator.get_state"]], "init() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.init"]], "init() (lips.physical_simulator.dcapproximationas.dcapproximationas method)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS.init"]], "init() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.init"]], "lips.physical_simulator": [[13, "module-lips.physical_simulator"]], "lips.physical_simulator.dcapproximationas": [[13, "module-lips.physical_simulator.dcApproximationAS"]], "lips.physical_simulator.grid2opsimulator": [[13, "module-lips.physical_simulator.grid2opSimulator"]], "lips.physical_simulator.physicalsimulator": [[13, "module-lips.physical_simulator.physicalSimulator"]], "lips.physical_simulator.physicssolver": [[13, "module-lips.physical_simulator.physicsSolver"]], "modify_state() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.modify_state"]], "modify_state() (lips.physical_simulator.physicalsimulator method)": [[13, "lips.physical_simulator.PhysicalSimulator.modify_state"]], "modify_state() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.modify_state"]], "modify_state() (lips.physical_simulator.physicalsimulator.physicalsimulator method)": [[13, "lips.physical_simulator.physicalSimulator.PhysicalSimulator.modify_state"]], "process_dataset() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.process_dataset"]], "process_dataset() (lips.physical_simulator.dcapproximationas.dcapproximationas method)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS.process_dataset"]], "process_dataset() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.process_dataset"]], "restore() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.restore"]], "restore() (lips.physical_simulator.dcapproximationas.dcapproximationas method)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS.restore"]], "restore() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.restore"]], "sample_chronics() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.sample_chronics"]], "sample_chronics() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.sample_chronics"]], "save() (lips.physical_simulator.physicssolver method)": [[13, "lips.physical_simulator.PhysicsSolver.save"]], "save() (lips.physical_simulator.dcapproximationas.dcapproximationas method)": [[13, "lips.physical_simulator.dcApproximationAS.DCApproximationAS.save"]], "save() (lips.physical_simulator.physicssolver.physicssolver method)": [[13, "lips.physical_simulator.physicsSolver.PhysicsSolver.save"]], "seed() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.seed"]], "seed() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.seed"]], "visualize_network() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.visualize_network"]], "visualize_network() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.visualize_network"]], "visualize_network_reference_topology() (lips.physical_simulator.grid2opsimulator method)": [[13, "lips.physical_simulator.Grid2opSimulator.visualize_network_reference_topology"]], "visualize_network_reference_topology() (lips.physical_simulator.grid2opsimulator.grid2opsimulator method)": [[13, "lips.physical_simulator.grid2opSimulator.Grid2opSimulator.visualize_network_reference_topology"]]}})